AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  github-activity-server

  Sample SAM Template for github-activity-server

# SAM spec: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md
# SAM is CF, therefore Cloud Formation spec: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html
# SAM Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: nodejs14.x
    Timeout: 5
  Api:
    EndpointConfiguration: EDGE
    Cors:
      AllowMethods: "'GET'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
      AllowCredentials: True

Parameters:
  GithubClientId:
    Type: String
    Description: Github issued OAuth client ID
  GithubClientSecret:
    Type: String
    NoEcho: true
    Description: Github issued OAuth client secret
  GithubOauthCallbackUrl:
    Type: String
    Description: Access token will be appended as parameter after which redirect will follow to this URL

Resources:
  OauthGithubAuthorizeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: githubAuthorization.handler
      Events:
        Gateway:
          Type: Api
          Properties:
            Path: /oauth/github/login
            Method: get
      Environment:
        Variables:
          CLIENT_ID: !Ref GithubClientId
  OauthGithubCallbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: githubAuthorizationCallback.handler
      Events:
        Gateway:
          Type: Api
          Properties:
            Path: /oauth/github/login/callback
            Method: get
      Environment:
        Variables:
          CLIENT_ID: !Ref GithubClientId
          CLIENT_SECRET: !Ref GithubClientSecret
          OAUTH_CALLBACK_URL: !Ref GithubOauthCallbackUrl
  ApiRepositoriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: repositories.handler
      Events:
        Gateway:
          Type: Api
          Properties:
            Path: /github/repositories
            Method: get
            RequestParameters:
              - method.request.header.X-Github-Token:
                  Required: true
                  Caching: false
              - method.request.querystring.organisation:
                  Required: true
                  Caching: false
  ApiOrganisationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: organisations.handler
      Events:
        Gateway:
          Type: Api
          Properties:
            Path: /github/organisations
            Method: get
            RequestParameters:
              - method.request.header.X-Github-Token:
                  Required: true
                  Caching: false

Outputs:
  # here /Prod refers to implicitly created Prod stage
  ApiUrl:
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  OauthGithubAuthorizeFunction:
    Value: !GetAtt OauthGithubAuthorizeFunction.Arn
  OauthGithubCallbackFunction:
    Value: !GetAtt OauthGithubCallbackFunction.Arn
